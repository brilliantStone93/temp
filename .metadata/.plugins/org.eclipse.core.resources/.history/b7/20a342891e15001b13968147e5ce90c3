package network;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.util.List;

public class ChatHandlerObject extends Thread{
	private Socket socket;
	private List<ChatHandlerObject> list;
	private ObjectInputStream oi;
	private ObjectOutputStream oo ;
	private InfoDTO dto;
	
	
	public ChatHandlerObject (Socket socket, List<ChatHandlerObject> list) throws IOException {
		this.socket = socket;
		this.list = list;
		
		oi = new ObjectInputStream(socket.getInputStream());
		oo = new ObjectOutputStream(socket.getOutputStream());
		
		
		
	}
	
	
	@Override
	public void run() {
	
		while(true) {
			//닉네임 받는쪽
			try {
				dto = (InfoDTO)oi.readObject();
				if(dto.getCommeand() == Info.JOIN) {
					
					broadcast(dto);
				}
				else if(dto.getCommeand() == Info.EXIT) {
						break; 
				}
				else if(dto.getCommeand() == Info.SEND) {
					broadcast(dto);
				}
				oi.close();
				oo.close();
				socket.close();
			} catch (IOException e) {
				e.printStackTrace();
			} catch (ClassNotFoundException e) {
			
				e.printStackTrace();
			}

		}//while
		
		
	}//run
	
	public void broadcast(InfoDTO dto) throws IOException {//다른사람들에게 메세지 뿌려주는 메소드
		for(ChatHandlerObject ch : list) {
			ch.oo.writeObject(dto);
			ch.oo.flush();
		}
		
		
		
	}//boradcast
}
